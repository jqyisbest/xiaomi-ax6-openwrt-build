name: auto_compile_AX6

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      SSH_ACTION:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        type: boolean
      RUN_IN_SINGLE_THREAD:
        description: 'Run Actions In Single Thread'
        required: false
        default: 'false'
        type: boolean
      SAVE_CONFIG:
        description: 'Save Current Compile Config'
        required: false
        default: 'false'
        type: boolean
      UPLOAD_ARTIFACT:
        description: 'Upload artifact'
        required: false
        default: 'true'
        type: boolean
      CREATE_RELEASE:
        description: 'Create release'
        required: false
        default: 'false'
        type: boolean
  # push:
  # watch:
  #   types: started

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        ulimit -a
    
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 100
        root-reserve-mb: 1280
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
    
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install zstd dwarves llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        df -h
    
    - name: prepare
      run: |
        bash ./scripts/prepare.sh
    
    - name: Get Architecture
      working-directory: ${{ github.workspace }}/openwrt
      run: |
        LAST_COMMIT_HASH=$(curl -s "https://api.github.com/repos/AgustinLorenzo/openwrt/commits/main" | grep -m 1 '"sha":' | cut -d '"' -f 4 | cut -c 1-7)
        echo "LAST_COMMIT_HASH=${LAST_COMMIT_HASH}" >> $GITHUB_ENV
        tag_name=$(TZ=UTC-8 date +%Y%m%d%H%M)
        echo "tag_name=jqyisbest_${tag_name}" >>$GITHUB_ENV

    - name: SSH远程连接（make menuconfig）
      if: github.event.inputs.SSH_ACTION == 'true'
      uses: rdp-studio/ssh2actions@main
    
    - name: Make Download
      run: |
        cd openwrt
        make download -j50

    - name: Save Current Compile Config
      if: github.event.inputs.SAVE_CONFIG == 'true'
      run: |
        rm -rf ./debug/*
        cat ./openwrt/.config > ./debug/current_compile_config
        cd openwrt
        ./scripts/diffconfig.sh > current_different_config
        cat ./current_different_config > ../debug/current_different_config
        cd ../
        git add ./debug
        git commit -m "Save Current Compile Config And Current Different Config"
        git push -f

    - name: Compile Openwrt In Single Thread
      id: compileopenwrtinsinglethread
      if: github.event.inputs.RUN_IN_SINGLE_THREAD == 'true'
      continue-on-error: true
      run: |
        cd openwrt
        #echo | make kernel_oldconfig -j1 
        IGNORE_ERRORS=1 make -j1 V=s
        echo $?

    - name: Compile Openwrt
      id: compileopenwrt
      if: github.event.inputs.RUN_IN_SINGLE_THREAD == 'false'
      continue-on-error: true
      run: |
        cd openwrt
        #echo | make kernel_oldconfig -j$(($(nproc) + 1)) 
        IGNORE_ERRORS=1 make -j$(($(nproc) + 1))
        echo $?
    
    - name: If Error
      if: steps.compileopenwrt.outcome == 'failure' 
      run: |
        cat openwrt/.config
        echo '================================================================'
        cd openwrt && make -j1 V=s
    
    - name: Print Disk Space After
      run: df -h
    
    - name: Organize files
      id: organize
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        # mv openwrt/bin/targets/qualcommax/ipq807x/*squashfs-factory.* ./artifact/
        # mv openwrt/bin/targets/qualcommax/ipq807x/*squashfs* ./artifact/
        # mv openwrt/bin/targets/qualcommax/ipq807x/config.buildinfo ./artifact/
        mv openwrt/bin/targets/qualcommax/ipq807x/* ./artifact/
        cd ./artifact/
        ls -Ahl
    
    - name: Upload artifact
      if: github.event.inputs.UPLOAD_ARTIFACT == 'true'
      uses: actions/upload-artifact@main
      with:
        name: OpenWRT_${{ env.tag_name }}
        path: ./artifact/

    
    - name: Create release
      if: github.event.inputs.CREATE_RELEASE == 'true'
      id: create_release
      uses: ncipollo/release-action@v1.12.0
      with:
        name: ax6-${{ env.tag_name }}-${{ env.LAST_COMMIT_HASH }}
        allowUpdates: true
        tag: ${{ env.tag_name }}-${{ env.LAST_COMMIT_HASH }}
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./artifact/*
